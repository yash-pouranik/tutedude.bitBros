<% layout('layouts/boilerplate') %>

<section class="shopping-page">
  <div class="container">

    <!-- üîç Search Bar & Sort Option -->
    <div class="search-sort-wrapper animated-glass">
      <input
        id="productSearch"
        type="text"
        class="form-control search-input tough-input"
        placeholder="üîç Search by name or category (e.g. milk, packed, dairy)"
        oninput="handleSearch()"
      >

      <!-- Sort by Closest - Hidden unless searching -->
      <div id="sortClosestContainer" class="form-check sort-check animated-fade" style="display: none;">
        <input class="form-check-input tough-check" type="checkbox" id="sortClosest" onchange="handleSearch()">
        <label class="form-check-label ms-2" for="sortClosest">Sort by Closest üìç</label>
      </div>

      <!-- Sort by Price - Always visible -->
      <div id="sortPriceContainer" class="form-check sort-check animated-fade">
        <input class="form-check-input tough-check" type="checkbox" id="sortPrice" onchange="handleSearch()">
        <label class="form-check-label ms-2" for="sortPrice">Sort by Price üí∞</label>
      </div>
    </div>

    <!-- üì¶ All Products -->
    <div id="all-section" class="item-section">
      <h2 class="section-title">All Products</h2>
      <% if (allProducts.length === 0) { %>
        <p class="placeholder">No products to show yet.</p>
      <% } else { %>
        <div class="product-grid" id="all-products-grid">
          <% allProducts.forEach(p => { %>
            <a href="/product/<%= p._id %>"
               class="product-card-link"
               data-name="<%= p.name.toLowerCase() %>"
               data-category="<%= p.category || '' %>"
               data-distance="<%= p.distance || 99999 %>">
              <div class="product-card">
                <div class="product-img">
                  <img src="<%= p.imageUrl %>" alt="<%= p.name %>">
                </div>
                <div class="product-details">
                  <h3><%= p.name %></h3>
                  <p class="price">‚Çπ<%= p.price %> per <%= p.unit %></p>
                  <% if (p.distance) { %>
                    <p>Distance: <%= p.distance %> km</p>
                  <% } else { %>
                    <p>Distance: N/A</p>
                  <% } %>
                </div>
              </div>
            </a>
          <% }) %>
        </div>
        <p id="noResults" class="placeholder hidden">No matching products found.</p>
      <% } %>
    </div>

  </div>
</section>

<script>
function handleSearch() {
  const query = document.getElementById('productSearch').value.trim().toLowerCase();
  const sortClosest = document.getElementById('sortClosest').checked;
  const sortPrice = document.getElementById('sortPrice').checked;

  const sortClosestContainer = document.getElementById('sortClosestContainer');
  sortClosestContainer.style.display = query ? 'inline-flex' : 'none';

  const activeSection = document.querySelector('.item-section:not(.hidden)');
  const allCards = Array.from(activeSection.querySelectorAll('.product-card-link'));
  let matchingCards = [];

  allCards.forEach(card => {
    const name = card.dataset.name || '';
    const category = card.dataset.category || '';
    const matchesSearch = !query || name.includes(query) || category.includes(query);

    card.style.display = matchesSearch ? '' : 'none';
    if (matchesSearch) matchingCards.push(card);
  });

  if (sortPrice || (sortClosest && query)) {
    const grid = activeSection.querySelector('.product-grid');

    if (sortClosest && query) {
      matchingCards.sort((a, b) => {
        return parseFloat(a.dataset.distance) - parseFloat(b.dataset.distance);
      });
    }

    if (sortPrice) {
      matchingCards.sort((a, b) => {
        const priceA = parseFloat(a.querySelector('.price').innerText.replace(/[^\d.]/g, ''));
        const priceB = parseFloat(b.querySelector('.price').innerText.replace(/[^\d.]/g, ''));
        return priceA - priceB;
      });
    }

    matchingCards.forEach(card => grid.appendChild(card));
  }

  const noResults = activeSection.querySelector('.placeholder');
  if (noResults) {
    noResults.style.display = matchingCards.length === 0 ? '' : 'none';
  }
}
</script>

<style>
  body {
    font-family: 'Segoe UI', sans-serif;
    background: linear-gradient(to bottom, #fffdf5, #fef6eb);
    margin: 0;
  }

  .shopping-page .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  .product-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 26px;
  }

  @media (max-width: 768px) {
    .product-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (max-width: 480px) {
    .product-grid {
      grid-template-columns: 1fr;
    }
  }

  .section-title {
    font-weight: 600;
    font-size: 1.8rem;
    color: #222;
    margin-bottom: 1.5rem;
    text-align: center;
  }

  .product-card-link {
    text-decoration: none;
    color: inherit;
  }

  .product-card {
    background: #fff;
    border-radius: 18px;
    overflow: hidden;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.07);
    transition: transform 0.25s ease, box-shadow 0.25s ease;
    display: flex;
    flex-direction: column;
    height: 100%;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.8) !important;
  }

  .product-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 16px 30px rgba(0, 0, 0, 0.1);
  }

  .product-img img {
    width: 100%;
    height: 180px;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .product-card:hover .product-img img {
    transform: scale(1.06);
  }

  .product-details {
    padding: 15px 18px;
  }

  .product-details h3 {
    font-size: 1.2rem;
    font-weight: 600;
    margin-bottom: 8px;
    color: #222;
  }

  .price {
    color: #2b9348;
    font-weight: bold;
    font-size: 1.05rem;
  }

  .placeholder {
    color: #aaa;
    text-align: center;
    font-style: italic;
    margin-top: 1.5rem;
  }

  .hidden {
    display: none;
  }

  .search-sort-wrapper {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    padding: 1rem 1.5rem;
    justify-content: center;
    align-items: center;
    border-radius: 16px;
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 0 12px rgba(255, 169, 77, 0.3);
    animation: slideFadeIn 0.8s ease forwards;
  }

  .search-input.tough-input {
    flex: 1;
    min-width: 250px;
    max-width: 360px;
    padding: 12px 16px;
    font-size: 1rem;
    font-weight: 500;
    border-radius: 12px;
    border: 1px solid #ffa94d;
    background-color: #fff;
    transition: all 0.3s ease;
    box-shadow: inset 0 0 4px rgba(255, 153, 0, 0.2);
  }

  .search-input.tough-input:focus {
    outline: none;
    border-color: #e67e22;
    box-shadow: 0 0 0 4px rgba(255, 169, 77, 0.25);
  }

  .sort-check {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    opacity: 0;
    transform: translateY(-10px);
    animation: fadeInUp 0.7s ease forwards;
    animation-delay: 0.3s;
  }

  .tough-check {
    accent-color: #ffa94d;
    width: 1.1rem;
    height: 1.1rem;
    box-shadow: 0 0 4px rgba(255, 169, 77, 0.5);
    transition: all 0.2s ease-in-out;
  }

  .tough-check:checked {
    box-shadow: 0 0 10px rgba(255, 169, 77, 0.8);
  }

  .form-check-label {
    font-weight: 600;
    color: #333;
  }

  @media (max-width: 576px) {
    .search-sort-wrapper {
      flex-direction: column;
      align-items: stretch;
    }

    .product-img img {
      height: 160px;
    }
  }

  @keyframes slideFadeIn {
    0% {
      opacity: 0;
      transform: translateY(-20px) scale(0.95);
    }
    100% {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
